{"version":3,"sources":["components/Navbar.js","components/Todo.js","components/Form.js","components/FilterButton.js","App.js","index.js"],"names":["Navbar","className","Todo","props","useState","isEditing","setEditing","newName","setNewName","editingTemplate","onSubmit","e","preventDefault","editTask","id","htmlFor","name","type","value","onChange","target","onClick","viewTemplate","defaultChecked","completed","toggleTaskCompleted","deleteTask","Form","setName","addTask","autoComplete","FilterButton","aria-pressed","isPressed","setFilter","FILTER_MAP","All","Active","task","Completed","FILTER_NAMES","Object","keys","App","tasks","setTasks","filter","updateTasks","map","remainingTasks","editedTaskList","taskList","filterList","taskNoun","length","headingText","newTask","nanoid","role","aria-labelledby","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d4266095.chunk.js","sourcesContent":["import React from 'react';\r\nimport './App.css';\r\n\r\nexport default function Navbar() \r\n{\r\n    return (\r\n        <div className = \"navbarClass\">\r\n            <h1>Todo List Squadra</h1>\r\n        </div>\r\n        \r\n         \r\n    )\r\n}\r\n","import React, { useState } from 'react'\r\n\r\nexport default function Todo(props) \r\n{    \r\n    const [isEditing, setEditing] = useState(false);\r\n    const [newName, setNewName] = useState('');\r\n\r\n    function handleChange(e)\r\n    {\r\n      setNewName(e.target.value);\r\n    }\r\n\r\n    function handleSubmit(e)\r\n    {\r\n      e.preventDefault();\r\n      props.editTask(props.id, newName);\r\n      setNewName(\"\");\r\n      setEditing(false);\r\n    }\r\n\r\n    const editingTemplate = (\r\n      <form className=\"stack-small\" onSubmit={handleSubmit}>\r\n        <div className=\"form-group\">\r\n          <label className=\"todo-label\" htmlFor={props.id}>\r\n            {props.name}\r\n          </label>\r\n          <input \r\n            id={props.id} \r\n            className=\"todo-text\" \r\n            type=\"text\"\r\n            value={newName}\r\n            onChange={handleChange} />\r\n        </div>\r\n        <div className=\"btn-group\">\r\n          <button type=\"button\" className=\"btn todo-cancel\" onClick = {() => setEditing(false)}>\r\n            Cancel\r\n            <span className=\"visually-hidden\">renaming {props.name}</span>\r\n          </button>\r\n          <button type=\"submit\" className=\"btn btn__primary todo-edit\">\r\n            Save\r\n            <span className=\"visually-hidden\">new name for {props.name}</span>\r\n          </button>\r\n        </div>\r\n      </form>\r\n    );\r\n    const viewTemplate = (\r\n      <div className=\"stack-small\">\r\n        <div className=\"c-cb\">\r\n            <input\r\n              id={props.id}\r\n              type=\"checkbox\"\r\n              defaultChecked={props.completed}\r\n              onChange={() => props.toggleTaskCompleted(props.id)}\r\n            />\r\n            <label className=\"todo-label\" htmlFor={props.id}>\r\n              {props.name}\r\n            </label>\r\n          </div>\r\n          <div className=\"btn-group\">\r\n            <button type=\"button\" className=\"btn\" onClick = {() => setEditing(true)}>\r\n              Edit <span className=\"visually-hidden\">{props.name}</span>\r\n            </button>\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn__danger\"\r\n              onClick={() => props.deleteTask(props.id)}\r\n            >\r\n              Delete <span className=\"visually-hidden\">{props.name}</span>\r\n            </button>\r\n          </div>\r\n      </div>\r\n    );\r\n    \r\n    return (\r\n      <li className = \"todo\">\r\n        {isEditing ? editingTemplate : viewTemplate}\r\n      </li>\r\n    )\r\n}\r\n","import React, {useState} from 'react'\r\n\r\nexport default function Form(props) \r\n{\r\n    const [name, setName] = useState('');\r\n\r\n    function handleChange(e)\r\n    {\r\n        setName(e.target.value);\r\n    }\r\n\r\n    function handleSubmit(e)\r\n    {\r\n        e.preventDefault();\r\n        props.addTask(name);\r\n        setName(\"\");\r\n    }\r\n\r\n    return (\r\n        <form onSubmit = {handleSubmit}>\r\n        <h2 className = \"label-wrapper\">\r\n          <label htmlFor = \"new-todo-input\" className = \"label__lg\">Enter your task</label>\r\n        </h2>\r\n\r\n        <input \r\n            type = \"text\" \r\n            id = \"new-todo-input\" \r\n            className = \"input input__lg\" \r\n            name = \"text\" \r\n            autoComplete = \"off\" \r\n            value = {name} \r\n            onChange = {handleChange}/>\r\n\r\n        <button type = \"submit\" className = \"btn btn__primary btn__lg\">Add Task</button>        \r\n      </form>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function FilterButton(props) \r\n{\r\n    return (        \r\n        <button \r\n            type = \"button\" \r\n            className = \"btn toggle-btn\" \r\n            aria-pressed = {props.isPressed} \r\n            onClick = {() => props.setFilter(props.name)}>\r\n                <span className = \"visually-hidden\">Show</span>\r\n                <span>{props.name}</span>\r\n                <span className = \"visually-hidden\">Tasks</span>\r\n        </button>        \r\n    )\r\n}\r\n","//import './App.css';\r\nimport React, {useState} from 'react';\r\nimport {nanoid} from \"nanoid\";\r\n\r\nimport Navbar from './components/Navbar';\r\nimport Todo from './components/Todo';\r\nimport Form from './components/Form';\r\nimport FilterButtons from './components/FilterButton';\r\nimport FilterButton from './components/FilterButton';\r\n\r\nconst FILTER_MAP = \r\n{\r\n  All: () => true,\r\n  Active: task => !task.completed,\r\n  Completed: task => task.completed\r\n}\r\n\r\nconst FILTER_NAMES = Object.keys(FILTER_MAP);\r\n\r\nfunction App(props) \r\n{\r\n  const [tasks, setTasks] = useState(props.tasks);\r\n  const [filter, setFilter] = useState('All');\r\n  \r\n  function toggleTaskCompleted(id)\r\n  {\r\n    const updateTasks = tasks.map(task =>\r\n      {\r\n        if(id === task.id)\r\n        {\r\n          return {...task, completed: !task.completed}\r\n        }\r\n        return task;\r\n      });\r\n      setTasks(updateTasks);\r\n  }\r\n\r\n  function deleteTask(id)\r\n  {\r\n    const remainingTasks = tasks.filter(task => id !== task.id);\r\n    setTasks(remainingTasks);\r\n  }\r\n\r\n  function editTask(id, newName)\r\n  {\r\n    \r\n    const editedTaskList = tasks.map(task => \r\n      {\r\n        if (id === task.id)\r\n        {\r\n          return {...task, name: newName}\r\n        }\r\n        return task;\r\n      });\r\n      setTasks(editedTaskList);\r\n  }\r\n  \r\n  \r\n  const taskList = tasks.filter(FILTER_MAP[filter]).map(task => (\r\n  <Todo \r\n    id = {task.id} \r\n    name = {task.name} \r\n    completed = {task.completed} \r\n    key = {task.id}\r\n    toggleTaskCompleted = {toggleTaskCompleted}\r\n    deleteTask = {deleteTask}\r\n    editTask = {editTask}\r\n  />));\r\n\r\n  const filterList = FILTER_NAMES.map(name => (\r\n    <FilterButton \r\n      key = {name} \r\n      name = {name}\r\n      isPressed = {name === filter}\r\n      setFilter = {setFilter} />\r\n  ));\r\n  \r\n  function addTask(name)\r\n  {\r\n    const newTask = \r\n    {\r\n      id: \"todo-\" + nanoid(),\r\n      name: name,\r\n      completed: false\r\n    };\r\n    setTasks([...tasks, newTask]);\r\n  }\r\n\r\n  const taskNoun = taskList.length !== 1 ? 'tasks' : 'task';\r\n  const headingText = `${taskList.length} ${taskNoun} remaining`;\r\n  return (\r\n\r\n    <div>\r\n      <Navbar></Navbar>\r\n      <div className=\"todoapp stack-large\">\r\n        <Form addTask = {addTask} />\r\n\r\n        <div className = \"filters btn-group stack-exception\">\r\n          {filterList} \r\n        </div>\r\n      \r\n        <h2 id = \"list-heading\">\r\n          {headingText}\r\n        </h2>\r\n\r\n        <ul role = \"list\" className = \"todo-list stack-large stack-exception\" aria-labelledby = \"list-heading\">        \r\n          {taskList}\r\n        </ul>\r\n      </div>\r\n\r\n    </div>\r\n\r\n      );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nconst DATA = []\r\n\r\nReactDOM.render(<React.StrictMode><App tasks = {DATA}/></React.StrictMode>,document.getElementById('root'));\r\n"],"sourceRoot":""}